import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { useState } from "react";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  if (hello.data) {
    console.log(hello.data.spells);
  }
  return (
    <>
      <Head>
        <title>Hello</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-4xl font-extrabold tracking-tight text-white">
            TTRPG Combat Manager
          </h1>
          <EncounterList />
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

type Combatant = {
  name: string;
  intiative: number;
  armorClass: number;
  hitPoints: {
    total: number,
    current: number
  },
  tags: string[]
}

const seedCombatants: Combatant[] = [
  {
    name: 'Alice',
    intiative: 10,
    armorClass: 15,
    hitPoints: {
      total: 50,
      current: 50
    },
    tags: ['human', 'fighter']
  },
  {
    name: 'Bob',
    intiative: 15,
    armorClass: 12,
    hitPoints: {
      total: 30,
      current: 10
    },
    tags: ['elf', 'rogue']
  },
  {
    name: 'Charlie',
    intiative: 5,
    armorClass: 18,
    hitPoints: {
      total: 80,
      current: 80
    },
    tags: ['dwarf', 'cleric']
  }
];

const EncounterList: React.FC = ({ }) => {
  const [combatants, setCombatants] = useState<Combatant[]>(seedCombatants);

  return <table className="text-white">
    {combatants.map(combatant => {
      return <tr>
        <td>{combatant.name}</td>
        <td>{combatant.intiative}</td>
        <td>{combatant.armorClass}</td>
        <td>{`${combatant.hitPoints.current}/${combatant.hitPoints.total}`}</td>
      </tr>
    })}
  </table>
}


